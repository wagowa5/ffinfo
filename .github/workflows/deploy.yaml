name: deploy

on:
  push:
    tags:
      - v*

jobs:
  build-and-deploy:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        # https://github.com/actions/checkout
        uses: actions/checkout@v4

      - name: Setup Node
        # https://github.com/actions/setup-node
        uses: actions/setup-node@v4
        with:
          node-version: 18.12.1

      - name: Get Yarn Cache Directory Path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache Node Modules
        # https://github.com/actions/cache
        id: yarn-cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn

      - name: Build
        run: |
          yarn install
          yarn build
        env:
          REACT_APP_USER_POOL_ID: ${{ secrets.REACT_APP_USER_POOL_ID }}
          REACT_APP_CLIENT_ID: ${{ secrets.REACT_APP_CLIENT_ID }}
          REACT_APP_REGION: ${{ secrets.REACT_APP_REGION }}
          REACT_APP_IDENTITY_POOL_ID: ${{ secrets.REACT_APP_IDENTITY_POOL_ID }}
          REACT_APP_CHOCOCALC_API_ENDPOINT: ${{ secrets.REACT_APP_CHOCOCALC_API_ENDPOINT }}
          REACT_APP_COGNITO_PASS: ${{ secrets.REACT_APP_COGNITO_PASS }}

      - name: Deploy to S3
        run: |
          # sync --deleteでS3バケットの内容をビルド内容と完全一致させる
          # metadataとcacheでエンドユーザーが常に最新のコンテンツを見れるようにする
          echo "deploy to s3"
          aws s3 --region ap-northeast-1 sync ./build ${{ secrets.AWS_S3_BUCKET_NAME }} --delete --metadata-directive "REPLACE" --cache-control "max-age=0"
          # CloudFrontのキャッシュ削除なしでも上手くいっているので一旦コメントアウト
          #echo "aws cloudfront create-invalidation"
          #aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths '/*'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
